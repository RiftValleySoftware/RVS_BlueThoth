{"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV10cutTheLineyyxF":{"name":"cutTheLine(_:)","abstract":"<p>This will push the single element into the 0th (first) place.","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV7enqueueyyxF":{"name":"enqueue(_:)","abstract":"<p>Add an Element to the end of the queue.</p>","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV7enqueueyySayxGF":{"name":"enqueue(_:)","abstract":"<p>Add an Array of Element to the end of the queue.</p>","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV7dequeuexSgyF":{"name":"dequeue()","abstract":"<p>Removes and returns from the front of the queue.","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV9removeAllyyF":{"name":"removeAll()","abstract":"<p>Deletes all data in the queue.</p>","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV12arrayLiteralACyxGxd_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Variadic initializer.</p>","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV10startIndexSivp":{"name":"startIndex","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV8endIndexSivp":{"name":"endIndex","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueV5index5afterS2i_tF":{"name":"index(after:)","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html#/s:25RVS_Generic_Swift_Toolbox0A10_FIFOQueueVyxSicip":{"name":"subscript(_:)","parent_name":"RVS_FIFOQueue"},"Structs/RVS_FIFOQueue.html":{"name":"RVS_FIFOQueue","abstract":"<p>An efficient variable-size FIFO queue of elements of type &ldquo;Element.&rdquo;</p>"},"Protocols/RVS_SequenceProtocol.html#/s:25RVS_Generic_Swift_Toolbox0A17_SequenceProtocolPy7ElementQzSicip":{"name":"subscript(_:)","abstract":"<p>Subscript access is get-only (for safety).</p>","parent_name":"RVS_SequenceProtocol"},"Protocols/RVS_SequenceProtocol.html#/s:25RVS_Generic_Swift_Toolbox0A17_SequenceProtocolP17sequence_contentsxSay7ElementQzG_tcfc":{"name":"init(sequence_contents:)","parent_name":"RVS_SequenceProtocol"},"Protocols/RVS_SequenceProtocol.html#/s:25RVS_Generic_Swift_Toolbox0A17_SequenceProtocolP9removeAllyyF":{"name":"removeAll()","abstract":"<p>This allows us to remove all the elements in the sequence. It is a mutating function/method.</p>","parent_name":"RVS_SequenceProtocol"},"Protocols/RVS_SequenceProtocol.html#/s:25RVS_Generic_Swift_Toolbox0A17_SequenceProtocolPAAE7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns true, if yes, we have no bananas.</p>","parent_name":"RVS_SequenceProtocol"},"Protocols/RVS_SequenceProtocol.html#/s:25RVS_Generic_Swift_Toolbox0A17_SequenceProtocolPAAE5countSivp":{"name":"count","abstract":"<p>The number of elements we have. 1-based. 0 is no elements (isEmpty is true).</p>","parent_name":"RVS_SequenceProtocol"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP7ElementQa":{"name":"Element","abstract":"<p>Defines the type for the Elements</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP10cutTheLineyy7ElementQzF":{"name":"cutTheLine(_:)","abstract":"<p>This will push the single element into the 0th (first) place.</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP7enqueueyy7ElementQzF":{"name":"enqueue(_:)","abstract":"<p>Adds a new Element to the end (back) of the queue</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP7enqueueyySay7ElementQzGF":{"name":"enqueue(_:)","abstract":"<p>Adds a new Array of Element to the end (back) of the queue</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP7dequeue7ElementQzSgyF":{"name":"dequeue()","abstract":"<p>Removes and returns the first element from the beginning (front) of the queue. nil, if the queue is empty.</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html#/s:25RVS_Generic_Swift_Toolbox10OLEB_QueueP9removeAllyyF":{"name":"removeAll()","abstract":"<p>Deletes all data in the queue.</p>","parent_name":"OLEB_Queue"},"Protocols/OLEB_Queue.html":{"name":"OLEB_Queue","abstract":"<p>This was taken straight from the objc.io book &ldquo;Advanced Swift.&rdquo; It&rsquo;s so damn useful, that I have it made into a standard tool.</p>"},"Protocols/RVS_SequenceProtocol.html":{"name":"RVS_SequenceProtocol","abstract":"<p>If you conform to this protocol, you get a few basic Sequence attributes for free.</p>"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE16localizedVariantSSvp":{"name":"localizedVariant","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE3md5SSvp":{"name":"md5","abstract":"<p>This calculates an MD5 checksum of the String, and returns it as an uppercase hex String.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE6sha256SSvp":{"name":"sha256","abstract":"<p>This calculates a SHA256 checksum of the String, and returns it as an uppercase hex String.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE8hexDump8SaySSGvp":{"name":"hexDump8","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE9hexDump16SaySSGvp":{"name":"hexDump16","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE15firstUppercasedSSvp":{"name":"firstUppercased","abstract":"<p>This extension lets us uppercase only the first letter of the string (used for weekdays).","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE16urlEncodedStringSSSgvp":{"name":"urlEncodedString","abstract":"<p>The following computed property comes from this: <a href=\"http://stackoverflow.com/a/27736118/879365\">http://stackoverflow.com/a/27736118/879365</a></p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE16urlDecodedStringSSSgvp":{"name":"urlDecodedString","abstract":"<p>The opposite of the above</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE10binaryOnlySSvp":{"name":"binaryOnly","abstract":"<p>This simply strips out all non-binary characters in the string, leaving only valid binary digits.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE9octalOnlySSvp":{"name":"octalOnly","abstract":"<p>This simply strips out all non-octal characters in the string, leaving only valid octal digits.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE11decimalOnlySSvp":{"name":"decimalOnly","abstract":"<p>This simply strips out all non-decimal characters in the string, leaving only valid decimal digits.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE7hexOnlySSvp":{"name":"hexOnly","abstract":"<p>This simply strips out all non-hex characters in the string, leaving only valid, uppercased (forced) hex digits.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE8hex2UTF8SSSgvp":{"name":"hex2UTF8","abstract":"<p>A fairly blunt-instrument hex digit pair-to-ASCII character converter. It isn&rsquo;t particularly intelligent.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE7hex2IntSiSgvp":{"name":"hex2Int","abstract":"<p>Another fairly brute-force simple parser.","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE10uuidFormatSSSgvp":{"name":"uuidFormat","abstract":"<p>This &ldquo;scrubs&rdquo; a String, returning it as a proper UUID format (either 4 hex characters, or a split 32-hex-character String, in 8-4-4-4-12 format.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE5index2of7optionsSS5IndexVSgx_So22NSStringCompareOptionsVtF":{"name":"index(of:options:)","abstract":"<p>This allows us to find the first index of a substring.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE8endIndex2of7optionsSS0F0VSgx_So22NSStringCompareOptionsVtF":{"name":"endIndex(of:options:)","abstract":"<p>This allows us to find the last index of a substring.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE7indexes2of7optionsSaySS5IndexVGx_So22NSStringCompareOptionsVtF":{"name":"indexes(of:options:)","abstract":"<p>This returns an Array of indexes that map all the occurrences of a given substring.</p>","parent_name":"StringProtocol"},"Extensions/StringProtocol.html#/s:Sy25RVS_Generic_Swift_ToolboxE6ranges2of7optionsSaySnySS5IndexVGGx_So22NSStringCompareOptionsVtF":{"name":"ranges(of:options:)","abstract":"<p>This returns an Array of Index Ranges that map all the occurrences of a given substring.</p>","parent_name":"StringProtocol"},"Extensions/Int.html#/s:Si25RVS_Generic_Swift_ToolboxE11maskedValue10firstPlace9runLengthS2i_SitF":{"name":"maskedValue(firstPlace:runLength:)","abstract":"<p>This method allows us to mask a discrete bit range within the number, and return its value as a basic Int.</p>","parent_name":"Int"},"Extensions/UInt.html#/s:Su25RVS_Generic_Swift_ToolboxE11maskedValue10firstPlace9runLengthS2u_SutF":{"name":"maskedValue(firstPlace:runLength:)","abstract":"<p>This method allows us to mask a discrete bit range within the number, and return its value as a basic unsigned Int.</p>","parent_name":"UInt"},"Extensions/UInt64.html#/s:s6UInt64V25RVS_Generic_Swift_ToolboxE11maskedValue10firstPlace9runLengthABSu_SutF":{"name":"maskedValue(firstPlace:runLength:)","abstract":"<p>This method allows us to mask a discrete bit range within the number, and return its value as a 64-bit unsigned Int.</p>","parent_name":"UInt64"},"Extensions/UInt64.html":{"name":"UInt64","abstract":"<p>This extension will add a new set of capabilities to the native UInt64 data type.</p>"},"Extensions/UInt.html":{"name":"UInt","abstract":"<p>This extension will add a new set of capabilities to the native UInt data type.</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>This extension will add a new set of capabilities to the native Int data type.</p>"},"Extensions/StringProtocol.html":{"name":"StringProtocol","abstract":"<p>These are a variety of cool String extensions that add some great extra cheese on the pizza."},"Classes/RVS_DebugTools.html#/s:25RVS_Generic_Swift_Toolbox0A11_DebugToolsC18isRunningUnitTestsSbvpZ":{"name":"isRunningUnitTests","abstract":"<p>This is used to see whether or not we are running under unit tests. It is optional, and isn&rsquo;t really supposed to be replaced.</p>","parent_name":"RVS_DebugTools"},"Classes/RVS_DebugTools.html":{"name":"RVS_DebugTools","abstract":"<p>This class is a &ldquo;junk drawer&rdquo; of vrious debug/testing tools.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}